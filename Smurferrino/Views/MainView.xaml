<UserControl x:Class="Smurferrino.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:enums="clr-namespace:Smurferrino.Enums"
        cal:Bind.AtDesignTime="True"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=viewModels:MainViewModel, IsDesignTimeCreatable=True}" 
        xmlns:cal="http://www.caliburnproject.org"
        xmlns:viewModels="clr-namespace:Smurferrino.ViewModels"
        Height="490" Width="900">
    <UserControl.Resources>
        <ObjectDataProvider x:Key="compSpecsEnum"
                           MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:ComputerSpec"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="bhopEnum"
                            MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:BhopOption"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </UserControl.Resources>

    <StackPanel Orientation="Horizontal" Background="White">
        <WrapPanel Orientation="Vertical">
            <GroupBox Margin="12" Header="Triggerbot" DataContext="{Binding Path=Trigger, UpdateSourceTrigger=PropertyChanged}">
                <StackPanel Margin="12">
                    <CheckBox IsChecked="{Binding Enabled, Mode=TwoWay}" Content="Enable"/>
                    <CheckBox IsChecked="{Binding DoubleCheck, UpdateSourceTrigger=PropertyChanged}" Content="Double check" Margin="0 6 0 0"/>

                    <StackPanel Orientation="Vertical" Margin="0 12 0 0">
                        <TextBlock Text="PreSpray delay"/>
                        <TextBox Text="{Binding PreSprayDelay, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>

                    <StackPanel Orientation="Vertical" Margin="0 12 0 0">
                        <TextBlock Text="AfterSpray delay"/>
                        <TextBox Text="{Binding AfterSprayDelay, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>

                    <StackPanel Orientation="Vertical" Margin="0 12 0 0">
                        <TextBlock Text="Shots"/>
                        <TextBox Text="{Binding SprayDuration, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>

                    <StackPanel Orientation="Vertical" Margin="0 12 0 0">
                        <TextBlock Text="KeyID activation (0 = always)"/>
                        <TextBox Text="{Binding Key, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>

                    <StackPanel Orientation="Vertical" Margin="0 12 0 0">
                        <TextBlock Text="Random max sleep (0 = constant)"/>
                        <TextBox Text="{Binding MaxRandomSleep, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                </StackPanel>
            </GroupBox>

            <GroupBox Margin="12" Header="Bunnyhop" DataContext="{Binding Path=Bunny, UpdateSourceTrigger=PropertyChanged}">
                <StackPanel Margin="12">
                    <CheckBox IsChecked="{Binding Enabled, UpdateSourceTrigger=PropertyChanged}" Content="Enable" Margin="6"/>

                    <ComboBox  ItemsSource="{Binding Source={StaticResource bhopEnum}, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding CanBhopOption}"
                               SelectedValue="{Binding Path=BhopOption, UpdateSourceTrigger=PropertyChanged}"
                               Margin="6 6 6 6"/>
                </StackPanel>
            </GroupBox>

            <GroupBox Margin="12" Header="NoRecoil" DataContext="{Binding Path=RCS, UpdateSourceTrigger=PropertyChanged}">
                <StackPanel Margin="10">
                    <CheckBox IsChecked="{Binding Enabled, UpdateSourceTrigger=PropertyChanged}" Content="Enable"/>
                </StackPanel>
            </GroupBox>

            <GroupBox Margin="12" Header="Wallhack" DataContext="{Binding Path=Glow, UpdateSourceTrigger=PropertyChanged}">
                <StackPanel Margin="12">
                    <CheckBox IsChecked="{Binding Enabled, UpdateSourceTrigger=PropertyChanged}" Content="Enable"/>
                    <CheckBox IsChecked="{Binding ShowTeammates, UpdateSourceTrigger=PropertyChanged}" Content="Show teammates" Margin="0 6 0 0"/>
                </StackPanel>
            </GroupBox>

            <GroupBox Margin="12" Header="Visuals" DataContext="{Binding Path=Visuals, UpdateSourceTrigger=PropertyChanged}">
                <StackPanel Margin="12">
                    <CheckBox IsChecked="{Binding RadarSpottedEnabled, UpdateSourceTrigger=PropertyChanged}" Content="Radar spotting" Margin="0 0 0 0"/>

                    <StackPanel Orientation="Vertical" Margin="0 12 0 0">
                        <TextBlock Text="Flashbang alpha (1-100%)"/>
                        <TextBox Text="{Binding FlashbangAlphaPercentage, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>

                    <CheckBox IsChecked="{Binding FOVEnabled, UpdateSourceTrigger=PropertyChanged}" Content="FOV Enable" Margin="0 12 0 0"/>

                    <StackPanel Orientation="Vertical" Margin="0 6 0 0">
                        <TextBlock Text="FOV (1-179, default=0)"/>
                        <TextBox Text="{Binding FOV, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>

                    <StackPanel Orientation="Vertical" Margin="0 12 0 0">
                        <TextBlock Text="FOV Key activation (0 = always)"/>
                        <TextBox Text="{Binding FOVKey, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                </StackPanel>
            </GroupBox>

            <GroupBox Margin="12" Header="Config">
                <StackPanel Margin="10" Width="160">
                    <Button Content="Load" Margin="0 6 0 6" x:Name="LoadConfig"/>
                    <Button Content="Save as" Margin="0 6 0 6" x:Name="SaveConfig"/>
                </StackPanel>
            </GroupBox>

            <GroupBox Margin="12" Header="CS:GO State">
                <StackPanel Margin="10" Width="120">
                    <Label Content="{Binding GameState, UpdateSourceTrigger=PropertyChanged}"/>
                    <Button Content="Reload" x:Name="ClientReload" Margin="6 6 6 0"/>
                </StackPanel>
            </GroupBox>

            <GroupBox Margin="12" Header="Computer specs (Refresh delay)"
                      DataContext="{Binding Path=CompSpecs, UpdateSourceTrigger=PropertyChanged}">

                <ComboBox  ItemsSource="{Binding Source={StaticResource compSpecsEnum}, UpdateSourceTrigger=PropertyChanged}"
                           SelectedValue="{Binding UserSpec, UpdateSourceTrigger=PropertyChanged}"
                           Margin="12"/>
            </GroupBox>

            <GroupBox Header="TestModel platform" DataContext="{Binding Path=TestModel, UpdateSourceTrigger=PropertyChanged}" Width="350">
                <StackPanel>
                    <ItemsControl ItemsSource="{Binding Path=TestCollection}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Width="60" HorizontalAlignment="Right"/>
                                    <TextBlock Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <Button cal:Message.Attach="Update()" Content="Update"/>
                    <Button cal:Message.Attach="Stop()" Content="Stop"/>
                </StackPanel>
            </GroupBox>
        </WrapPanel>
    </StackPanel>
</UserControl>
